format_version: 5
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - STEP_VERSION: 1.1.2
  # define these in your .bitrise.secrets.yml
  - SAMPLE_APP_URL: https://github.com/bitrise-samples/macos-sample-app.git
  - BITRISE_PROJECT_PATH: macos-sample-app.xcodeproj
  - BITRISE_SCHEME: macos-sample-app

workflows:
  # ----------------------------------------------------------------
  # --- workflow to Step Test
  test:
    before_run:
    - audit-this-step
    - go-tests
    steps:
    - script:
        title: cleanup ./_tmp
        inputs:
        - content: rm -rf ./_tmp
    - change-workdir:
        title: change workdir to ./_tmp
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
        title: git clone sample project
        inputs:
        - content: git clone $SAMPLE_APP_URL .
    - certificate-and-profile-installer:
        title: install codesigning files
        inputs:
        - default_certificate_url: ""
        - default_certificate_passphrase: ""
        - default_provisioning_profile_url: ""
    - path::./:
        title: step test
        inputs:
        - is_clean_build: "yes"
        - generate_code_coverage_files: "no"
        - output_tool: xcodebuild
        - destination: "platform=OS X,arch=x86_64"
    - script:
        title: output test
        is_always_run: true
        inputs:
        - content: 'echo "BITRISE_XCODE_TEST_RESULT: ${BITRISE_XCODE_TEST_RESULT}"'

  go-tests:
    steps:
    - script:
        title: export go files to test
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            no_vendor_paths="$(go list ./... | grep -v vendor)"
            envman add --key GOLIST_WITHOUT_VENDOR --value "$no_vendor_paths"
    - script:
        title: errcheck
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go get -u -v github.com/kisielk/errcheck
            errcheck -asserts=true -blank=true $GOLIST_WITHOUT_VENDOR
    - script:
        title: go lint
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go get -u -v github.com/golang/lint/golint
            while read -r line; do
              echo "-> Linting: $line"
              golint_out="$(golint $line)"
              if [[ "${golint_out}" != "" ]] ; then
                echo "=> Golint issues found:"
                echo "${golint_out}"
                exit 1
              fi
            done <<< "$GOLIST_WITHOUT_VENDOR"
    - script:
        title: go test
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go test $(go list ./... | grep -v vendor)

  # ----------------------------------------------------------------
  # --- Utility workflows
  dep-update:
    title: dep update
    description: |
      Used for updating bitrise dependencies with dep
    steps:
    - script:
        title: dependency update
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go get -u -v github.com/golang/dep/cmd/dep
            dep ensure -v
            dep ensure -v -update

  # ----------------------------------------------------------------
  # --- workflows to create Release
  create-release:
    steps:
    - script:
        title: create release
        inputs:
        - content: |
            #!/bin/bash
            set -e
            export CI=true
            releaseman create --version $STEP_VERSION

  # ----------------------------------------------------------------
  # --- workflow to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        title: audit this step
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml

  share-this-step:
    envs:
      # if you want to share this step into a StepLib
      - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
      - STEP_ID_IN_STEPLIB: xcode-test-mac
      - STEP_GIT_VERION_TAG_TO_SHARE: $STEP_VERSION
      - STEP_GIT_CLONE_URL: https://github.com/bitrise-steplib/steps-xcode-test-mac.git
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share

      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!

      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.

      You're now ready to share this Step, just make sure that
      the `STEP_ID_IN_STEPLIB` and `STEP_GIT_VERION_TAG_TO_SHARE`
      environments are set to the desired values!

      To share this Step into a StepLib you can just run: $ bitrise run share-this-step

      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    before_run:
    - audit-this-step
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            bitrise share start -c ${MY_STEPLIB_REPO_FORK_GIT_URL}
            bitrise share create --stepid ${STEP_ID_IN_STEPLIB} --tag ${STEP_GIT_VERION_TAG_TO_SHARE} --git ${STEP_GIT_CLONE_URL}
            bitrise share finish
