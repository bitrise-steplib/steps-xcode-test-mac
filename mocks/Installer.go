// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	version "github.com/hashicorp/go-version"
	mock "github.com/stretchr/testify/mock"
)

// Installer is an autogenerated mock type for the Installer type
type Installer struct {
	mock.Mock
}

// Install provides a mock function with given fields:
func (_m *Installer) Install() (*version.Version, error) {
	ret := _m.Called()

	var r0 *version.Version
	if rf, ok := ret.Get(0).(func() *version.Version); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*version.Version)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewInstaller interface {
	mock.TestingT
	Cleanup(func())
}

// NewInstaller creates a new instance of Installer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewInstaller(t mockConstructorTestingTNewInstaller) *Installer {
	mock := &Installer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
